<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>comp-sci on Kelvin&#39;s Blog</title>
    <link>https://blog.steinerkelvin.dev/tags/comp-sci/</link>
    <description>Recent content in comp-sci on Kelvin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Nov 2022 14:00:00 -0300</lastBuildDate><atom:link href="https://blog.steinerkelvin.dev/tags/comp-sci/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mantaining few snapshots</title>
      <link>https://blog.steinerkelvin.dev/posts/xx-fewsnaps/</link>
      <pubDate>Thu, 24 Nov 2022 14:00:00 -0300</pubDate>
      
      <guid>https://blog.steinerkelvin.dev/posts/xx-fewsnaps/</guid>
      <description>While my friend Victor and I were writing Kindelia, he implemented a solution to maintain a set of snapshots of the network&amp;rsquo;s memory and challenged us to find an algorithm with the same properties, as — I believe — an attempt to validate his solution as he had never found a similar solution being described, much less named.
The problem A computationally-heavy transaction is applied to the current state to get the next state ( $ S_{t+1} = f(S_t, x_t) ) $ at each time interval.</description>
    </item>
    
  </channel>
</rss>
